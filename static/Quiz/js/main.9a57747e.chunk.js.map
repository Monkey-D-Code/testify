{"version":3,"sources":["components/Login/Login.js","components/Signup/Signup.js","pages/Home/Home.js","pages/Profile/Profile.js","pages/404/404.js","pages/QuizDetail/QuizDetail.js","components/SubmitMessage/SubmitMessage.js","pages/Exam/Exam.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","_Component","Login","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","username","password","errors","ajaxerror","modalOpen","Loading","inputChangeHandler","e","setState","defineProperty","target","name","value","onOpenModal","onCloseModal","submit","_this$state","url","props","push","field","message","info","axios","post","then","response","token_assign","data","token","res","setUser","login","history","catch","error","console","log","JSON","stringify","err","inherits","createClass","key","_this$state2","react_default","a","createElement","react","className","type","placeholder","id","onChange","onClick","Spinner","animation","variant","index_es","open","onClose","center","closeOnOverlayClick","style","padding","map","index","Component","Signup","first_name","middle_name","last_name","email","contact_number","confirm_password","student","user","color","Home","_this$props","components_Login_Login","components_Signup_Signup","Profile","Quizzes","Reports","quizSubmitSuccess","componentWillMount","get","setQuizSubmitSuccess","logout","src","display_image_url","alt","quiz","syllabus","cover_image_url","width","react_router_dom","to","report","submission_date","submission_time","Table","striped","bordered","hover","answered","correct","gained_marks","NotFound","QuizDetail","Quiz","_this2","match","params","goFullScreen","negative_marking","allotted_time_in_minutes","pub_date","SubmitMessage","Exam","Questions","AnswerSheet","finalized","un_answered","quiz_id","no_of_questions","removeElement","array","elem","indexOf","splice","findQuestion","question_id","i","findIndex","parseInt","findOption","option_id","options","opt_key","onTimerEnd","finalize","temp","selectAnswer","checked","checked_answer","question","getAttribute","option","toast","success","question_text","option_text","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","exitFullScreen","warning","render","SubmitMessage_SubmitMessage","height","react_countdown_clock_default","seconds","alpha","size","onComplete","display","margin","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","Item","Link","eventKey","Content","Pane","marks","isMultipleCorrect","class","data-ques_id","htmlFor","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","App","Loggedin","Student","baseAjaxUrl","fullScreenActive","setStudent","changeFullScreen","toggleLogin","assignToken","dist_default","enabled","react_router","exact","path","pages_Home_Home","pages_Profile_Profile","pages_QuizDetail_QuizDetail","pages_Exam_Exam","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a57747e.chunk.js","sourcesContent":["import React , {Component , Fragment} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './Login.css'\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\n\r\nexport default withRouter(class Login extends Component {\r\n\r\n    state = {\r\n        username : '',\r\n        password: '',\r\n        errors: [],\r\n        ajaxerror: '',\r\n        modalOpen : false,\r\n        Loading : false,\r\n    }\r\n\r\n    inputChangeHandler = (e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n        })\r\n\r\n    }\r\n\r\n    // modal functions\r\n    onOpenModal = ()=>{\r\n        this.setState({\r\n          modalOpen : true,\r\n        })\r\n      }\r\n    onCloseModal = ()=>{\r\n        this.setState({\r\n            modalOpen : false,\r\n        })\r\n    }\r\n    \r\n    submit = ()=>{\r\n\r\n        const {\r\n            username,\r\n            password,\r\n            \r\n        } = this.state;\r\n\r\n        const {url} = this.props;\r\n        \r\n        let errors = []\r\n        if(username.length ===0 ){\r\n            errors.push({\r\n                field : 'username',\r\n                message:'Please enter a username',\r\n            })\r\n        }else if(username.length > 0 && username.length < 8){\r\n            errors.push({\r\n                field : 'username',\r\n                message:'Must be at least 8 characters',\r\n            })\r\n        }\r\n        if(password.length === 0){\r\n            errors.push({\r\n                field : 'password',\r\n                message:'Please enter your chosen password',\r\n            })\r\n        }else if(password.length > 0 && password.length < 8){\r\n            errors.push({\r\n                field : 'password',\r\n                message:'Must be at least 8 characters',\r\n            })\r\n        }\r\n\r\n        if(errors.length === 0){\r\n            const info = {\r\n                username,\r\n                password,\r\n            }\r\n            this.setState({\r\n                Loading:true,\r\n            });\r\n            axios.post(`${url}/accounts/login/`,info)\r\n                .then((response)=>{\r\n                    this.props.token_assign(response.data.token);\r\n                    axios.post(`${url}/accounts/student-from-token/`,{token:response.data.token})\r\n                        .then((res)=>{\r\n                            \r\n                            this.props.setUser(res.data);\r\n                            this.props.login();\r\n                    \r\n                            this.props.history.push('/profile');\r\n\r\n                        })\r\n                        .catch((response , error)=>{\r\n                            console.log(error);\r\n                            this.setState({\r\n                                ajaxerror:JSON.stringify(response),\r\n                                modalOpen:true,\r\n                                Loading:false,\r\n                            })\r\n\r\n                        })\r\n\r\n                    \r\n                })\r\n                .catch((response , err)=>{\r\n                    console.log(err);\r\n                    this.setState({\r\n                        ajaxerror:JSON.stringify(response),\r\n                        modalOpen:true,\r\n                        Loading:false,\r\n                    })\r\n                })\r\n\r\n        }else{\r\n            this.setState({\r\n                errors,\r\n                modalOpen:true,\r\n            })\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const {username,password,modalOpen,errors,ajaxerror,Loading} = this.state;\r\n        return(\r\n            <Fragment>\r\n                <h3 className='sub-heading'>Login To Testify</h3>\r\n                <form>\r\n                    <div className='form-group'>\r\n                        \r\n                        <input  type='text' placeholder='Enter Your Username' name='username' id='username' value={username} onChange={this.inputChangeHandler}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        \r\n                        <input  type='password' placeholder='Enter Your Password' name='password' id='password' value={password} onChange={this.inputChangeHandler}/>\r\n                    </div>\r\n                    <button type='button' className='login-button' onClick={this.submit}>{Loading?<Spinner animation=\"grow\" variant=\"danger\" /> : \"Login\"}</button>\r\n                    \r\n                    \r\n                </form>\r\n                <Modal open={modalOpen} onClose={this.onCloseModal} center closeOnOverlayClick style={{padding:'1.3em'}}>\r\n                    <h2>Please Correct the following errors</h2>\r\n                    <ul className='error-list'>\r\n                        {errors.map((error,index)=>{\r\n                            return(\r\n                                <li className='error-list-item' key={index}>\r\n                                    {error.field} : {error.message}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        \r\n                    </ul>\r\n                    <div>\r\n                        {ajaxerror}\r\n                    </div>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n})","import React , {Component , Fragment} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from 'react-responsive-modal';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nimport './Signup.css'\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        first_name: '',\r\n        middle_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        username: '',\r\n        contact_number: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        errors : [],\r\n        modalOpen : false,\r\n        ajaxerror: '',\r\n        Loading:false,\r\n    }\r\n\r\n\r\n    inputChangeHandler = (e)=>{\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    }\r\n    // modal functions\r\n    onOpenModal = ()=>{\r\n        this.setState({\r\n          modalOpen : true,\r\n        })\r\n      }\r\n    onCloseModal = ()=>{\r\n        this.setState({\r\n            modalOpen : false,\r\n        })\r\n    }\r\n\r\n    // submut & validation function\r\n    submit = ()=>{\r\n        // taking all the state variables\r\n        const {\r\n            first_name,\r\n            middle_name,\r\n            last_name,\r\n            username,\r\n            email,\r\n            contact_number,\r\n            password,\r\n            confirm_password,\r\n        } = this.state;\r\n        let errors = [];\r\n        // first name validation\r\n        if(first_name === ''){\r\n            errors.push({\r\n                field:'first_name',\r\n                message:'You must tell us your first name !',\r\n            })\r\n        }else if(first_name.length < 3 ){\r\n            errors.push({\r\n                field:'first_name',\r\n                message:'Must be at least 3 characters',\r\n            })\r\n        }\r\n\r\n\r\n        // last name validation\r\n        if(last_name === ''){\r\n            errors.push({\r\n                field:'last_name',\r\n                message:'You must tell us your last name !',\r\n            })\r\n        }else if(last_name.length < 3 ){\r\n            errors.push({\r\n                field:'last_name',\r\n                message:'Must be at least 3 characters',\r\n            })\r\n        }\r\n\r\n        // username validation\r\n        if(username === ''){\r\n            errors.push({\r\n                field:'username',\r\n                message:'Must choose a unique username !',\r\n            })\r\n        }else if(username.length < 8 ){\r\n            errors.push({\r\n                field:'username',\r\n                message:'Must be at least 8 characters',\r\n            })\r\n        }\r\n\r\n        // email validation\r\n        if(email === ''){\r\n            errors.push({\r\n                field:'email',\r\n                message:'An Email address is mandatory',\r\n            })\r\n        }\r\n\r\n        // contact number validation\r\n        if(contact_number === ''){\r\n            errors.push({\r\n                field:'contact_number',\r\n                message:'Please provide a contact number',\r\n            })\r\n        }else if(contact_number.length !== 10){\r\n            errors.push({\r\n                field:'contact_number',\r\n                message:'Invalid contact number, must be 10 digits !',\r\n            })\r\n        }\r\n\r\n        // password validation\r\n        if(password === ''){\r\n            errors.push({\r\n                field:'password',\r\n                message:'Please choose a password',\r\n            })\r\n        }else if(password !== '' && password.length < 8){\r\n            errors.push({\r\n                field:'password',\r\n                message:'Must be at least 8 characters',\r\n            })\r\n        }\r\n\r\n        // confirm password validation\r\n        if(confirm_password === ''){\r\n            errors.push({\r\n                field:'confirm_password',\r\n                message:'Please confirm your password',\r\n            })\r\n        }else if(confirm_password !== '' && password !== confirm_password){\r\n            \r\n            errors.push({\r\n                field:'password',\r\n                message:'Not Matching',\r\n            })\r\n        }\r\n\r\n        if(errors.length === 0){\r\n            const student = {\r\n                user : {\r\n                    first_name,\r\n                    last_name,\r\n                    email,\r\n                    username,\r\n                    password,\r\n                },\r\n                middle_name,\r\n                contact_number,\r\n\r\n            }\r\n            axios.post('http://127.0.0.1:8000/accounts/student/create/',student)\r\n                .then((response)=>{\r\n                    if(typeof(response.data)=== 'object'){\r\n                        const info = {\r\n                            username,\r\n                            password,\r\n                        }\r\n                        axios.post('http://127.0.0.1:8000/accounts/login/',info)\r\n                            .then((response)=>{\r\n                                this.props.token_assign(response.data.token);\r\n                                axios.post(`${this.props.url}/accounts/student-from-token/`,{token:response.data.token})\r\n                                .then((res)=>{\r\n                                    \r\n                                    this.props.setUser(res.data);\r\n                                    this.props.login();\r\n                            \r\n                                    this.props.history.push('/profile');\r\n\r\n                                })\r\n                                .catch((response , error)=>{\r\n                                    console.log(error);\r\n                                    this.setState({\r\n                                        ajaxerror:JSON.stringify(response),\r\n                                        modalOpen:true,\r\n                                        Loading:false,\r\n                                    })\r\n\r\n                                })\r\n                                \r\n                            })\r\n                            .catch((response , err)=>{\r\n                                console.log(err);\r\n                                this.setState({\r\n                                    ajaxerror:JSON.stringify(response.response.data),\r\n                                    modalOpen:true,\r\n                                })\r\n                })\r\n                        \r\n                    }\r\n                })\r\n                .catch((response , error)=>{\r\n                    console.log(error);\r\n                    this.setState({\r\n                        ajaxerror:JSON.stringify(response.response.data),\r\n                        modalOpen:true,\r\n                    })\r\n                })\r\n        }else{\r\n            this.setState({\r\n                errors,\r\n                modalOpen:true,\r\n            })\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            first_name,\r\n            middle_name,\r\n            last_name,\r\n            username,\r\n            email,\r\n            contact_number,\r\n            password,\r\n            confirm_password,\r\n\r\n            errors,\r\n            modalOpen,\r\n            ajaxerror,\r\n            Loading,\r\n        } = this.state;\r\n        return(\r\n            <Fragment>\r\n                <h3 className='sub-heading' style={{color:'#A846A0'}}>Register To Testify</h3>\r\n                <form>\r\n                    <input type='text' placeholder='Your First name' value={first_name} name='first_name' onChange={this.inputChangeHandler}/>\r\n                    <input type='text' placeholder='Your Middle Name(optional)' value={middle_name} name='middle_name' onChange={this.inputChangeHandler}/>\r\n                    <input type='text' placeholder='Your Last Name' value={last_name} name='last_name' onChange={this.inputChangeHandler}/>\r\n                    <input type='email' placeholder='Your Email Address' value={email} name='email' onChange={this.inputChangeHandler}/>\r\n                    <input type='text' placeholder='Choose a Username' value={username} name='username' onChange={this.inputChangeHandler}/>\r\n                    <input type='number' placeholder='Personal Contact Number' value={contact_number} name='contact_number' onChange={this.inputChangeHandler}/>\r\n                    <input type='password' placeholder='Choose a password' value={password} name='password' onChange={this.inputChangeHandler}/>\r\n                    <input type='password' placeholder='Confirm your password' value={confirm_password} name='confirm_password' onChange={this.inputChangeHandler}/>\r\n                    <button type='button' className='signup-button' onClick={this.submit}>{Loading ? <Spinner animation='grow' variant=\"danger\" /> : \"Register\"}</button>\r\n                </form>\r\n                <Modal open={modalOpen} onClose={this.onCloseModal} center closeOnOverlayClick style={{padding:'1.3em'}}>\r\n                    <h2>Please Correct the following errors</h2>\r\n                    <ul className='error-list'>\r\n                        {errors.map((error,index)=>{\r\n                            return(\r\n                                <li className='error-list-item' key={index}>\r\n                                    {error.field} : {error.message}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        \r\n                    </ul>\r\n                    <div>\r\n                        {ajaxerror}\r\n                    </div>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Signup);","import React , {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './Home.css';\r\n\r\n// import components\r\nimport Login from '../../components/Login/Login';\r\nimport Signup from '../../components/Signup/Signup';\r\n\r\n\r\nexport default withRouter(class Home extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { url,login,token_assign,setUser } = this.props;\r\n        return(\r\n            <div className='Home'>\r\n                <h1 className='heading'>Welcome To Testify</h1>\r\n                <div className='forms'>\r\n                    <div className='login-form'>\r\n                        <Login \r\n                            login={login} \r\n                            token_assign={token_assign} \r\n                            setUser={setUser}\r\n                            url={url}/>\r\n\r\n                    </div>\r\n                    <div className='signup-form'>\r\n                       <Signup \r\n                            login={login} \r\n                            token_assign={token_assign} \r\n                            setUser={setUser}\r\n                            url={url} />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","import React , {Component} from 'react';\r\nimport {withRouter , NavLink} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from 'react-responsive-modal';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport './Profile.css'\r\n\r\n\r\n\r\n\r\nexport default withRouter(class Profile extends Component {\r\n\r\n    state = {\r\n        ajaxerror : '',\r\n        modalOpen : false,\r\n        Quizzes : [],\r\n        Reports : [],\r\n        quizSubmitSuccess : '',\r\n    }\r\n\r\n\r\n\r\n    componentWillMount = () =>{\r\n\r\n        if(this.props.token === ''){\r\n            this.props.login()\r\n            this.props.history.push('/')\r\n        }\r\n        const {url} = this.props;\r\n        axios.get(`${url}/quiz/list/`)\r\n            .then((response) => {\r\n                this.setState({\r\n                    Quizzes : response.data,\r\n                })\r\n            })\r\n            .catch((response , error) => {\r\n                console.log(error)\r\n                this.setState({\r\n                    ajaxerror : JSON.stringify(response.response.data),\r\n                    modalOpen : true,\r\n                })\r\n            });\r\n        const {student} = this.props;\r\n        axios.get(`${url}/quiz/student/${student.id}/reports/`)\r\n            .then((response)=>{\r\n                this.setState({\r\n                    Reports : response.data,\r\n                })\r\n            })\r\n            .catch((response,error)=>{\r\n                console.log(error)\r\n                this.setState({\r\n                    ajaxerror : JSON.stringify(response.response.data),\r\n                    modalOpen : true,\r\n                })\r\n            })\r\n    }\r\n\r\n    setQuizSubmitSuccess = (data)=>{\r\n\r\n        this.setState({\r\n            quizSubmitSuccess : data,\r\n        })\r\n    }\r\n\r\n    // modal functions\r\n    onOpenModal = ()=>{\r\n        this.setState({\r\n          modalOpen : true,\r\n        })\r\n      }\r\n    onCloseModal = ()=>{\r\n        this.setState({\r\n            modalOpen : false,\r\n        })\r\n    }\r\n\r\n    logout = () =>{\r\n\r\n        this.props.token_assign('');\r\n        this.props.login();\r\n        \r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const {modalOpen , ajaxerror , Quizzes , Reports} = this.state;\r\n        const {student} = this.props;\r\n        const {user} = student;\r\n        return(\r\n            <div className=\"profile\">\r\n                <div className='profile-section'>\r\n                    <img className='profile-image' src={student.display_image_url ?  student.display_image_url :`https://ui-avatars.com/api/?name=${user.first_name}+${user.last_name}&size=400&background=04030F&color=DDFC74`} alt={user.username} />\r\n                    <br/>\r\n                    <br/>\r\n                    <h3>\r\n                        {user.first_name} {student.middle_name} {user.last_name } <i className=\"fas fa-sign-out-alt signout-btn\" onClick={this.logout}></i></h3>\r\n                    <h5 className='username'>{user.username}</h5>\r\n                    <p><i className=\"fas fa-at\"></i> {user.email}</p>\r\n                   \r\n                </div>\r\n                <div className='exam-section'>\r\n                    \r\n                    {Quizzes.map((quiz,index)=>{\r\n                        \r\n                        return(\r\n                            <div className='quiz-card' key={index}>\r\n                                <h4><i className=\"fas fa-medal\"></i> {quiz.name}</h4>\r\n                                <p><i className=\"fas fa-book\"></i> {quiz.syllabus}</p>\r\n                                <img src={quiz.cover_image_url} alt={quiz.name} style={{width:'100%'}}/>\r\n                                <NavLink to={`/quiz/${quiz.id}`} className='btn'>Know More</NavLink>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className='report'>\r\n                    {Reports.map((report,index)=>{\r\n                        const {quiz} = report;\r\n                            return(\r\n                                <div className='quiz-card' key={index}>\r\n                                    <h4><i className=\"fas fa-bookmark\"></i> {quiz.name}</h4>\r\n                                    <h6><i className=\"fas fa-calendar-alt\"></i> {report.submission_date}</h6>\r\n                                    <h6><i className=\"fas fa-clock\"></i> {report.submission_time}</h6>\r\n                                    <Table striped bordered hover>\r\n                                        <thead>\r\n                                            <tr>\r\n                                            <th>#</th>\r\n                                            <th>Answered</th>\r\n                                            <th>Correct</th>\r\n                                            <th>Score</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                            <td>1</td>\r\n                                            <td>{report.answered}</td>\r\n                                            <td>{report.correct}</td>\r\n                                            <td>{report.gained_marks}</td>\r\n                                            </tr>\r\n                                            \r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n\r\n                <Modal open={modalOpen} onClose={this.onCloseModal} center closeOnOverlayClick style={{padding:'1.3em'}}>\r\n                    <h2>Valar Morghuilis ! </h2>\r\n                    <div>\r\n                        {ajaxerror}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n})","import React, {Component} from 'react'\r\n\r\n\r\nimport './404.css';\r\n\r\nexport default class NotFound extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='not-found'>\r\n                <h1>Page Not Found. 404</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React , {Component} from 'react';\r\nimport {withRouter , NavLink} from 'react-router-dom'\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nimport './QuizDetail.css';\r\n\r\nexport default withRouter(class QuizDetail extends Component{\r\n\r\n    state = {\r\n        modalOpen : false,\r\n        ajaxerror : '',\r\n\r\n        Quiz : {},\r\n        \r\n    }\r\n\r\n    componentWillMount(){\r\n       \r\n\r\n        axios.get(`http://127.0.0.1:8000/quiz/${this.props.match.params.id}/details/`)\r\n            .then((response) => {\r\n\r\n                this.setState({\r\n                    Quiz : response.data,\r\n                   \r\n                })\r\n                \r\n            })\r\n            .catch((response , error)=>{\r\n\r\n                console.log(error);\r\n                this.setState({\r\n                    ajaxerror: JSON.stringify(response),\r\n                    modalOpen : true,\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    // modal functions\r\n    onOpenModal = ()=>{\r\n        this.setState({\r\n          modalOpen : true,\r\n        })\r\n      }\r\n    onCloseModal = ()=>{\r\n        this.setState({\r\n            modalOpen : false,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {modalOpen , ajaxerror , Quiz} = this.state;\r\n        const {goFullScreen} = this.props;\r\n\r\n        return(\r\n            <div className='quiz-details'>\r\n\r\n\r\n                <img src={Quiz.cover_image_url} alt={Quiz.name} />\r\n                <h1>{Quiz.name} {Quiz.negative_marking && <i className=\"fas fa-exclamation-triangle\"></i>}</h1>\r\n                <p>\r\n                    <i className=\"fas fa-stopwatch\"></i> {Quiz.allotted_time_in_minutes} minutes\r\n                </p>\r\n                <p>\r\n                    <i className=\"far fa-calendar-plus\"></i> {Quiz.pub_date}\r\n                    \r\n                </p>\r\n                <p>\r\n                <i className=\"fas fa-book-open\"></i> {Quiz.syllabus}\r\n                    \r\n                </p>\r\n                <br/>\r\n               <NavLink to={`/exam/${Quiz.id}`} className='btn' quiz={Quiz} onClick={goFullScreen}>Start Quiz</NavLink>\r\n\r\n\r\n                <Modal open={modalOpen} onClose={this.onCloseModal} center closeOnOverlayClick style={{padding:'1.3em'}}>\r\n                    <h2>Please Correct the following errors</h2>\r\n                    \r\n                    <div>\r\n                        {ajaxerror}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n});","import React , {Component} from 'react'\r\nimport {withRouter , NavLink} from 'react-router-dom';\r\nimport {Table} from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default withRouter(class SubmitMessage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n    render() {\r\n        const { report } = this.props;\r\n        const {answered , correct , gained_marks} = report;\r\n        return(\r\n            <div className='submit-message container'>\r\n                <h1 className='text-center'>Your answers has been submitted successfully.</h1>\r\n                <h5 className='badge badge-warning text-center'>Your Score : </h5>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Answered</th>\r\n                        <th>Correct</th>\r\n                        <th>Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <td>1</td>\r\n                        <td>{answered}</td>\r\n                        <td>{correct}</td>\r\n                        <td>{gained_marks}</td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n                <NavLink to='/profile' className='btn btn-success'><i className=\"fas fa-long-arrow-alt-left\"></i> Back To Profile</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from 'react-responsive-modal';\r\nimport ReactCountdownClock from 'react-countdown-clock';\r\nimport {Tab, Row, Nav,Col,Table} from 'react-bootstrap';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport  './Exam.css';\r\n\r\n\r\n// custom components\r\nimport SubmitMessage from '../../components/SubmitMessage/SubmitMessage';\r\n\r\n\r\n\r\nexport default withRouter(class Exam extends Component{\r\n\r\n    state = {\r\n\r\n        modalOpen:false,\r\n        ajaxerror : '',\r\n        Questions: [],\r\n        Quiz : {},\r\n        AnswerSheet : [],\r\n        submit : false,\r\n        report : {},\r\n        finalized : false,\r\n        un_answered : 0,\r\n        answered : 0, \r\n        \r\n    }\r\n\r\n    componentWillMount = () => {\r\n        const {url} = this.props;\r\n        const quiz_id = this.props.match.params.id;\r\n        axios.get(`${url}/quiz/${quiz_id}/questions/`)\r\n            .then((response)=>{\r\n\r\n                this.setState({\r\n                    Questions : response.data,\r\n                })\r\n            })\r\n            .catch((response,error)=>{\r\n\r\n                console.log(error);\r\n                this.setState({\r\n                    modalOpen : true,\r\n                    ajaxerror: JSON.stringify(response),\r\n                })\r\n\r\n            });\r\n\r\n            axios.get(`${url}/quiz/${this.props.match.params.id}/details/`)\r\n            .then((response) => {\r\n\r\n                this.setState({\r\n                    Quiz : response.data,\r\n                    un_answered : response.data.no_of_questions,\r\n                   \r\n                })\r\n                \r\n            })\r\n            .catch((response , error)=>{\r\n\r\n                console.log(error);\r\n                this.setState({\r\n                    ajaxerror: JSON.stringify(response),\r\n                    modalOpen : true,\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    // modal functions\r\n    onOpenModal = ()=>{\r\n        this.setState({\r\n          modalOpen : true,\r\n        })\r\n      }\r\n    onCloseModal = ()=>{\r\n        this.setState({\r\n            modalOpen : false,\r\n        })\r\n    }\r\n\r\n    removeElement = (array, elem)=> {  \r\n        const index = array.indexOf(elem);\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    findQuestion = (question_id)=>{\r\n        const{Questions} = this.state;\r\n        const i = Questions.findIndex(i => i.id === parseInt(question_id));\r\n        return Questions[i];\r\n    }\r\n\r\n    findOption = (question_id , option_id)=>{\r\n        const{Questions} = this.state;\r\n        const i = Questions.findIndex(i => i.id === parseInt(question_id));\r\n        const options =  Questions[i].options;\r\n        const opt_key = options.findIndex(i => i.id === parseInt(option_id));\r\n        return options[opt_key];\r\n\r\n    }\r\n\r\n    onTimerEnd = ()=>{\r\n        this.finalize();\r\n        this.submit();\r\n    }\r\n    temp = [];\r\n    // this fires when an option is checked or un checked\r\n    selectAnswer = (e)=>{\r\n        const {Quiz} = this.state;\r\n        \r\n        if(e.target.checked){\r\n            const checked_answer = {\r\n                question:parseInt(e.target.getAttribute('data-ques_id')),\r\n                option: parseInt(e.target.id),\r\n            }\r\n            this.temp.push(checked_answer);\r\n            this.setState({\r\n                answered: this.temp.length,\r\n                un_answered : (Quiz.no_of_questions - this.temp.length),\r\n            })\r\n            const question = this.findQuestion(e.target.getAttribute('data-ques_id'));\r\n            const option = this.findOption(e.target.getAttribute('data-ques_id') , e.target.id);\r\n            toast.success(`Q: ${question.question_text} \\n A: ${option.option_text}`, {\r\n                position: \"bottom-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                });\r\n                \r\n            \r\n        }else{\r\n           \r\n            \r\n            const i = this.temp.findIndex(i => i.question === parseInt(e.target.getAttribute('data-ques_id')));\r\n            \r\n            if (i > -1) {\r\n                this.temp.splice(i, 1);\r\n            }\r\n            this.setState({\r\n                answered: this.temp.length,\r\n                un_answered : (Quiz.no_of_questions - this.temp.length),\r\n            })\r\n            const question = this.findQuestion(e.target.getAttribute('data-ques_id'));\r\n            const option = this.findOption(e.target.getAttribute('data-ques_id') , e.target.id);\r\n            toast.error(`Q: ${question.question_text}  \\n  A: ${option.option_text}`, {\r\n                position: \"bottom-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                });\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    submit= ()=>{\r\n        const {student, url} = this.props;\r\n        const {finalized , AnswerSheet} = this.state;\r\n\r\n        if(finalized){\r\n\r\n            if(AnswerSheet.length === 0){\r\n                this.setState({\r\n                    ajaxerror: JSON.stringify('You Have Not Choosen Any Answer'),\r\n                    modalOpen : true,\r\n                })\r\n            }else{\r\n                const{Quiz} = this.state;\r\n                axios.post(`${url}/quiz/${Quiz.id}/generate-report/${student.id}/`, AnswerSheet)\r\n                    .then((response)=>{\r\n                        this.setState({\r\n                            submit : true,\r\n                            report : response.data,\r\n                        })\r\n                        this.props.exitFullScreen();\r\n                    })\r\n                    .catch((response,error)=>{\r\n                        this.setState({\r\n                            ajaxerror: JSON.stringify(response),\r\n                            modalOpen : true,\r\n                        })\r\n                        console.log(error);\r\n                    })\r\n         \r\n            }\r\n        }else{\r\n            this.setState({\r\n                ajaxerror: 'Answers need to be finalized before submitted to report !',\r\n                modalOpen : true,\r\n            })\r\n        }\r\n       \r\n    }\r\n    \r\n    finalize = (e)=>{\r\n        const {finalized} = this.state;\r\n        \r\n\r\n        \r\n            if(!finalized){\r\n                if(this.temp.length > 0){\r\n                this.setState({\r\n                    AnswerSheet : this.temp,\r\n                    finalized : true,\r\n                });\r\n                toast.info(`Finalization Successfull , Now Submit to view score.`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 4000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        ajaxerror: 'You need to tick some options for this to work',\r\n                        modalOpen : true,\r\n                    })\r\n\r\n                }\r\n            }else{\r\n                toast.warning('Already Finalized Your answers. Please hit submit.', {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                });\r\n            }\r\n        \r\n        \r\n    }\r\n\r\n    render = ()=> {\r\n\r\n        const {modalOpen , ajaxerror , Questions,Quiz , submit , report , answered , un_answered} = this.state;\r\n        \r\n        if(submit){\r\n            return(\r\n                <SubmitMessage report={report} exitFullScreen={this.props.exitFullScreen}/>\r\n            );\r\n        }else{\r\n\r\n            return(\r\n            \r\n                <div className='exam'>\r\n                    <div className='information'>\r\n                        <div className='quiz-info'>\r\n                            <h3 className='quiz-name'><i className=\"fas fa-award\"></i> {Quiz.name}</h3>\r\n                            <h5><i className=\"fas fa-clock\"></i> {Quiz.allotted_time_in_minutes} Minutes</h5>\r\n                            \r\n                        </div>\r\n                        <div className='answered'>\r\n                            <button type='button' className='login-button' onClick={this.submit} style={{width:'100%'}}><i className=\"fas fa-key\"></i> Submit</button>\r\n                            <button type='button' className='signup-button' onClick={this.finalize} style={{width:'100%'}}><i className=\"fas fa-eye\"></i> Finalize</button>\r\n                        </div>\r\n                        <div className='left'>\r\n                            <Table striped bordered hover style={{height:'100%'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Answered</th>\r\n                                        <th>Not Answered</th>\r\n                                    \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{answered}</td>\r\n                                        <td>{un_answered}</td>\r\n                                    \r\n                                    </tr>\r\n                                    \r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        <ReactCountdownClock seconds={parseInt(Quiz.allotted_time_in_minutes)*60 || 60}\r\n                            color=\"#87A330\"\r\n                            alpha={0.9}\r\n                            size={127}\r\n                            onComplete={this.onTimerEnd}\r\n                            style={{display:'block',margin:'auto'}}\r\n                            id='timer'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='question'>\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"0\">\r\n                    <Row>\r\n                        <Col sm={4}>\r\n                            <Nav variant=\"pills\" className=\"flex-column\">\r\n                                {Questions.map((question,index)=>{\r\n                                    return(\r\n                                    <Nav.Item key={index}>\r\n                                        <Nav.Link eventKey={index}><i className=\"fas fa-medal\"></i> {question.question_text}</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    );\r\n                                })}\r\n                                \r\n                            </Nav>\r\n                            \r\n                        </Col>\r\n                        <Col sm={8}>\r\n                        <Tab.Content>\r\n                            {Questions.map((question,index)=>{\r\n                                return(\r\n                                    <Tab.Pane eventKey={index} key={index}>\r\n                                        <Row>\r\n                                            <Col sm={12}>\r\n                                                <h4>{question.question_text}</h4>\r\n                                                <p className='marks'>{question.marks}</p>\r\n                                                {question.isMultipleCorrect && <span><i class=\"fas fa-clipboard-list-check\"></i></span>}\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br/>\r\n                                        <Row>\r\n                                            <Col sm={8}>\r\n                                                {question.options.map((option,index)=>{\r\n                                                    return(\r\n                                                        <p key={index} className='option'><input type='checkbox' id={option.id} data-ques_id={question.id} onChange={this.selectAnswer} /> <label htmlFor={option.id}>{option.option_text}</label></p>\r\n                                                    );\r\n                                                })}\r\n                                                \r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Tab.Pane>\r\n                                );\r\n                            })}\r\n                            \r\n                        </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                    </Tab.Container>\r\n                        \r\n                    </div>\r\n                    <Modal open={modalOpen} onClose={this.onCloseModal} center closeOnOverlayClick style={{padding:'1.3em'}}>\r\n                        <h2>Error Occured : </h2>\r\n                        \r\n                        <div>\r\n                            {ajaxerror}\r\n                        </div>\r\n                    </Modal>\r\n                    <ToastContainer\r\n                        position=\"bottom-right\"\r\n                        autoClose={2000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnVisibilityChange\r\n                        draggable\r\n                        pauseOnHover\r\n                        />\r\n                </div>\r\n             );\r\n        };\r\n            \r\n        \r\n    \r\n    }\r\n})\r\n","import React , {Component} from 'react';\nimport {BrowserRouter as Router , Switch , Route , Redirect } from 'react-router-dom';\nimport Fullscreen from \"react-full-screen\";\n\nimport './App.css'\n\nimport Home from './pages/Home/Home'\nimport Profile from './pages/Profile/Profile';\nimport NotFound from './pages/404/404'\nimport QuizDetail from './pages/QuizDetail/QuizDetail';\nimport Exam from './pages/Exam/Exam';\n\n\nclass App extends Component {\n\n  state = {\n    Loggedin:false,\n    token : '',\n    Student: {},\n    baseAjaxUrl : '',\n    fullScreenActive : false,\n  }\n\n  setStudent = (student) =>{\n    if(typeof(student)==='object'){\n      this.setState({\n        Student : student,\n      })\n    }\n  }\n\n  goFullScreen = ()=>{\n    this.setState({\n      fullScreenActive : true,\n    })\n  }\n\n  exitFullScreen = ()=>{\n    this.setState({\n      fullScreenActive : false,\n    })\n  }\n\n  changeFullScreen = (submit , ) => {\n\n\n  }\n\n  toggleLogin = ()=>{\n    this.setState({\n      Loggedin : !this.state.Loggedin,\n    })\n  }\n\n  assignToken = (token)=>{\n\n    this.setState({\n      token,\n    })\n  }\n\n  render() {\n    const { Loggedin ,token , baseAjaxUrl , Student , fullScreenActive} = this.state\n    return (\n      <Fullscreen \n          enabled={fullScreenActive}\n          onChange={this.changeFullScreen}\n        >\n        <Router>\n          <Switch>\n            <Route exact path='/' render={()=>(\n              !Loggedin ? <Home login={this.toggleLogin} token_assign={this.assignToken} setUser={this.setStudent} url={baseAjaxUrl}/> : <Redirect to='/profile' />\n            )} />\n            <Route exact path='/profile' render={()=>(\n              Loggedin ? <Profile token={token} token_assign={this.assignToken} login={this.toggleLogin} url={baseAjaxUrl} student={Student}/> : <Redirect to='/' />\n            )}/>\n\n            <Route exact path='/quiz/:id' render={()=>(\n              Loggedin ? <QuizDetail url={baseAjaxUrl} student={Student} goFullScreen={this.goFullScreen} /> : <Redirect to='/' />\n            )}/>\n            <Route exact path='/exam/:id' render={()=>(\n              Loggedin ? <Exam student={Student} url={baseAjaxUrl} goFullScreen={this.goFullScreen} exitFullScreen={this.exitFullScreen}/> : <Redirect to='/' />\n            )}/>\n\n          \n            <Route component={NotFound} />\n            \n          </Switch>\n          \n        </Router>\n      </Fullscreen>\n        \n      \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}